1. Create a pod named “web” using image nginx:1.11.9-alpine, on ports 80 and 443
2. Create a service to expose that pod, named as “webservice”
3. Copy the dns records for the service in file /opt/<yournamespace>/web.dnsrecord
4. Create a deployment with “redis” image on port 6379 and expose a service.
5. Increase the number of replicas to 3
6. Perform a rolling update to version 4.0.11-alpine.
7. Copy pod spec to file /opt/yournamespace/podversion.
8. Undo the image update to redis.. and confirm pod spec image matches
9. Create a multi container pod, with redis, memcached, nginx and mysql,
assign resource memory limit as 250M for each container.
10. List all the pods in your namespace sorted by name.
11. Mount a temporary volume within a busybox pod named “shell”
at directory “/export/volume” copy the pod spec into /opt/yourname/shellvolume
12. To the earlier pod “shell” attach liveliness probe to check the file
/export/volume/app.log being available.
13. Setup init container into shell pod that got created just now, to
create a file /export/volume/app.log empty file before the busybox container
is run.
14. Create a secret “<yourname>-secret” with user=<yourname>, secret=”SOMESECRET”
edit the “shell” pod to have the above secret imported as a volume
at /opt/mysecretvolume, and MYSECRET environment defined to map to
key secret in “<yourname>-secret”
15. Create a persistent Volume named “<yourname>”
specification that defines a volume for 10Gi mapping to hostpath /opt/<yourname>
16. Take the etcd database snapshot saved into file /opt/<yourname>/etcdsnapshot
the certificates and keys are available in /opt/certs directory.
17. Get the dns records for the service and pods for the deployment “redis”
copied to file /opt/<yourname>/dnsrecord.redis
18. List all the pods that are serviced by the service “webservice”and copy the output in /opt/<yourname>/webservice.targets
